<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/maven-v4_0_0.xsd">
                             
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.opentext.otsync</groupId>
        <artifactId>otsync.services</artifactId>
        <version>16.0.0</version>
    </parent>

    <artifactId>tempoinvitehandler</artifactId>
    <packaging>war</packaging>
    <name>Tempo Invite Handler Service</name>
    <description>Allows external invitees to confirm their invites, update their external profiles (passwords),
        and receive emails regarding the invite and share.</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- General app.properties -->
        <app.properties.displayName>Tempo Notifications Service</app.properties.displayName>
        <app.properties.description>Tempo Notifications Service</app.properties.description>
        <app.properties.version>16.0.0</app.properties.version>
        <app.properties.minimumClientVersion>2</app.properties.minimumClientVersion>
        <app.properties.type>service</app.properties.type>

        <!-- Output artifacts properties -->
        <appworks.service.name>temponotifications</appworks.service.name>
        <appworks.service.version>${app.properties.version}</appworks.service.version>
    </properties>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <!-- Don't include these files in the war, they are top level zip entries
                    in our deployable artifact, AppWorks apps are packaged in a particular structure -->
                <excludes>
                    <exclude>**/app.properties</exclude>
                    <exclude>**/icon.png</exclude>
                </excludes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!-- Ensure the app.properties and icon are moved into the correct place for the zip -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <webResources>
                        <resource>
                            <!-- this is relative to the pom.xml directory -->
                            <directory>src/main/resources</directory>
                            <!-- "filter" the properties we set in the pom into the app.properties file -->
                            <filtering>true</filtering>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>

            <!-- We build the AppWorks style zip using the Maven assembly plugin, please
                read this modules assembly/assembly.xml file for details. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>create-distribution</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>assembly/assembly.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <dependencies>

        <!-- OTAG dependencies -->
        <dependency>
            <groupId>com.opentext.otsync</groupId>
            <artifactId>otsync-service-tools</artifactId>
            <version>${version}</version>
        </dependency>
  
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>1.0.2</version>
        </dependency>

        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4</version>
        </dependency>

        <!-- DBACCESS -->
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>eclipselink</artifactId>
            <version>2.4.2</version>
        </dependency>
        <dependency>
            <groupId>com.opentext.otag.security</groupId>
            <artifactId>otag-security</artifactId>
            <version>${appworks.platform.version}</version>
        </dependency>
        <!-- These two are published locally by us and the vendors do
            not publish content to Maven central -->
        <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>sqljdbc4</artifactId>
            <version>4.0</version>
        </dependency>
        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc6</artifactId>
            <version>11.2.0.3</version>
        </dependency>
        <!-- DBACCESS -->
    </dependencies>

    <distributionManagement>
        <repository>
            <id>deployment</id>
            <name>Internal Releases</name>
            <url>${nexus.base.url}/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>deployment</id>
            <name>Internal Releases</name>
            <url>${nexus.base.url}/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

</project>