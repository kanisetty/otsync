<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	
	<modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.opentext.otsync</groupId>
        <artifactId>otsync.bundles.parent</artifactId>
        <version>16.0.0</version>
    </parent>

    <artifactId>dcs.component</artifactId>
    <packaging>war</packaging>
    <name>Document Conversion Component</name>
    <description>Provides reusable DCS component for mobile deployment</description>

	<!-- AppWorks team Maven repository-->
	<distributionManagement>
        <repository>
            <id>deployment</id>
            <name>Internal Releases</name>
            <url>${nexus.base.url}/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>deployment</id>
            <name>Internal Releases</name>
            <url>${nexus.base.url}/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <nexus.base.url>http://appworks-re1.lab.opentext.com:8082/nexus</nexus.base.url>

        <component.name>dcs-component</component.name>
        <component.version>16.0.0</component.version>
        <component.zip.name>${component.name}_${component.version}</component.zip.name>
    </properties>
    
	<build>
		<plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <executions>
                    <execution>
                        <id>default-deploy</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>

            <!-- Ignore the fact we don't have a web.xml file, we don't need one here! -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

            <!-- This plugin allows us to add JavaScript tools to our build arsenal,
                node, npm, bower, karma, gulp. see https://github.com/eirslett/frontend-maven-plugin -->
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>0.0.23</version>

                <configuration>
                    <!-- location of package.json, gulpfile.js etc -->
                    <workingDirectory>src/main/webapp</workingDirectory>
                </configuration>

                <executions>
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>

                        <phase>generate-resources</phase>
                        <configuration>
                            <nodeVersion>v0.10.4</nodeVersion>
                            <npmVersion>1.4.9</npmVersion>
                         </configuration>
                    </execution>

                    <!-- Get npm to pull the dependencies into a /node_modules dir within /webapp -->
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                    </execution>

                    <execution>
                        <id>bower install</id>
                        <goals>
                            <goal>bower</goal>
                        </goals>
                        <configuration>
                            <arguments>install</arguments>
                        </configuration>
                        <phase>generate-resources</phase>
                    </execution>

                    <execution>
                        <id>grunt build</id>
                        <goals>
                            <goal>grunt</goal>
                        </goals>
                        <phase>generate-resources</phase>
                    </execution>

                </executions>
            </plugin>

            <!-- We want to deploy the AppWorks ready zip file to the team repo so we
               can access and release them via CI and wrap it up easily in the bundle with Maven. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.3</version>
                <executions>
                    <execution>
                        <id>attach-AppWorks-zip-to-distribution</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach-artifact</goal>
                        </goals>
                        <configuration>
                            <artifacts>
                                <artifact>
                                    <file>${project.basedir}/src/main/webapp/dist/${component.zip.name}.zip</file>
                                    <type>zip</type>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

		</plugins>
	</build>

</project>