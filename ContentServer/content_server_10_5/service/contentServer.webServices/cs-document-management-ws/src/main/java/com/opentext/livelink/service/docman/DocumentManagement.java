package com.opentext.livelink.service.docman;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.2
 * 2015-08-13T14:09:18.970-07:00
 * Generated source version: 3.1.2
 * 
 */
@WebService(targetNamespace = "urn:DocMan.service.livelink.opentext.com", name = "DocumentManagement")
@XmlSeeAlso({com.opentext.livelink.service.core.ObjectFactory.class, ObjectFactory.class, com.opentext.ecm.api.ObjectFactory.class})
public interface DocumentManagement {

    @WebMethod(operationName = "ListNodesByPage", action = "urn:DocMan.service.livelink.opentext.com/ListNodesByPage")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/ListNodesByPage", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/ListNodesByPageResponse")
    @RequestWrapper(localName = "ListNodesByPage", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.ListNodesByPage")
    @ResponseWrapper(localName = "ListNodesByPageResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.ListNodesByPageResponse")
    @WebResult(name = "ListNodesByPageResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.NodePageResult listNodesByPage(
        @WebParam(name = "parentID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long parentID,
        @WebParam(name = "pageSpec", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.NodePageSpecification pageSpec
    );

    @WebMethod(operationName = "AddVersion", action = "urn:DocMan.service.livelink.opentext.com/AddVersion")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/AddVersion", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/AddVersionResponse")
    @RequestWrapper(localName = "AddVersion", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.AddVersion")
    @ResponseWrapper(localName = "AddVersionResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.AddVersionResponse")
    @WebResult(name = "AddVersionResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.Version addVersion(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "metadata", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.Metadata metadata,
        @WebParam(name = "attach", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.core.Attachment attach
    );

    @WebMethod(operationName = "GetNodesByNickname", action = "urn:DocMan.service.livelink.opentext.com/GetNodesByNickname")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetNodesByNickname", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetNodesByNicknameResponse")
    @RequestWrapper(localName = "GetNodesByNickname", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodesByNickname")
    @ResponseWrapper(localName = "GetNodesByNicknameResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodesByNicknameResponse")
    @WebResult(name = "GetNodesByNicknameResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.util.List<com.opentext.livelink.service.docman.Node> getNodesByNickname(
        @WebParam(name = "nicknames", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.util.List<java.lang.String> nicknames
    );

    @WebMethod(operationName = "DeleteNode", action = "urn:DocMan.service.livelink.opentext.com/DeleteNode")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/DeleteNode", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/DeleteNodeResponse")
    @RequestWrapper(localName = "DeleteNode", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.DeleteNode")
    @ResponseWrapper(localName = "DeleteNodeResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.DeleteNodeResponse")
    public void deleteNode(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id
    );

    @WebMethod(operationName = "GetRootNode", action = "urn:DocMan.service.livelink.opentext.com/GetRootNode")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetRootNode", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetRootNodeResponse")
    @RequestWrapper(localName = "GetRootNode", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetRootNode")
    @ResponseWrapper(localName = "GetRootNodeResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetRootNodeResponse")
    @WebResult(name = "GetRootNodeResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.Node getRootNode(
        @WebParam(name = "rootType", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String rootType
    );

    @WebMethod(operationName = "GetPagedNodeAuditData", action = "urn:DocMan.service.livelink.opentext.com/GetPagedNodeAuditData")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetPagedNodeAuditData", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetPagedNodeAuditDataResponse")
    @RequestWrapper(localName = "GetPagedNodeAuditData", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetPagedNodeAuditData")
    @ResponseWrapper(localName = "GetPagedNodeAuditDataResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetPagedNodeAuditDataResponse")
    @WebResult(name = "GetPagedNodeAuditDataResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.PagedNodeAuditData getPagedNodeAuditData(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "pageHandle", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.core.PageHandle pageHandle
    );

    @WebMethod(operationName = "AddToCollection", action = "urn:DocMan.service.livelink.opentext.com/AddToCollection")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/AddToCollection", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/AddToCollectionResponse")
    @RequestWrapper(localName = "AddToCollection", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.AddToCollection")
    @ResponseWrapper(localName = "AddToCollectionResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.AddToCollectionResponse")
    public void addToCollection(
        @WebParam(name = "collectionID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long collectionID,
        @WebParam(name = "collectionItems", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.util.List<com.opentext.livelink.service.docman.CollectionItem> collectionItems
    );

    @WebMethod(operationName = "CopyNode", action = "urn:DocMan.service.livelink.opentext.com/CopyNode")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/CopyNode", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/CopyNodeResponse")
    @RequestWrapper(localName = "CopyNode", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CopyNode")
    @ResponseWrapper(localName = "CopyNodeResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CopyNodeResponse")
    @WebResult(name = "CopyNodeResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.Node copyNode(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "parentID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long parentID,
        @WebParam(name = "newName", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String newName,
        @WebParam(name = "copyOptions", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.CopyOptions copyOptions
    );

    @WebMethod(operationName = "ListNodes", action = "urn:DocMan.service.livelink.opentext.com/ListNodes")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/ListNodes", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/ListNodesResponse")
    @RequestWrapper(localName = "ListNodes", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.ListNodes")
    @ResponseWrapper(localName = "ListNodesResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.ListNodesResponse")
    @WebResult(name = "ListNodesResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.util.List<com.opentext.livelink.service.docman.Node> listNodes(
        @WebParam(name = "parentID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long parentID,
        @WebParam(name = "partialData", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        boolean partialData
    );

    @WebMethod(operationName = "CreateSimpleFolder", action = "urn:DocMan.service.livelink.opentext.com/CreateSimpleFolder")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/CreateSimpleFolder", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/CreateSimpleFolderResponse")
    @RequestWrapper(localName = "CreateSimpleFolder", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateSimpleFolder")
    @ResponseWrapper(localName = "CreateSimpleFolderResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateSimpleFolderResponse")
    @WebResult(name = "CreateSimpleFolderResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public long createSimpleFolder(
        @WebParam(name = "parentID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long parentID,
        @WebParam(name = "name", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String name
    );

    @WebMethod(operationName = "GetRenditionContentsContext", action = "urn:DocMan.service.livelink.opentext.com/GetRenditionContentsContext")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetRenditionContentsContext", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetRenditionContentsContextResponse")
    @RequestWrapper(localName = "GetRenditionContentsContext", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetRenditionContentsContext")
    @ResponseWrapper(localName = "GetRenditionContentsContextResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetRenditionContentsContextResponse")
    @WebResult(name = "GetRenditionContentsContextResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.lang.String getRenditionContentsContext(
        @WebParam(name = "nodeID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long nodeID,
        @WebParam(name = "versionNum", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long versionNum,
        @WebParam(name = "renditionType", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String renditionType
    );

    @WebMethod(operationName = "CreateNodeAndVersionContext", action = "urn:DocMan.service.livelink.opentext.com/CreateNodeAndVersionContext")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/CreateNodeAndVersionContext", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/CreateNodeAndVersionContextResponse")
    @RequestWrapper(localName = "CreateNodeAndVersionContext", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateNodeAndVersionContext")
    @ResponseWrapper(localName = "CreateNodeAndVersionContextResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateNodeAndVersionContextResponse")
    @WebResult(name = "CreateNodeAndVersionContextResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.lang.String createNodeAndVersionContext(
        @WebParam(name = "node", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.Node node
    );

    @WebMethod(operationName = "UpgradeCategoryItemsContext", action = "urn:DocMan.service.livelink.opentext.com/UpgradeCategoryItemsContext")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/UpgradeCategoryItemsContext", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/UpgradeCategoryItemsContextResponse")
    @RequestWrapper(localName = "UpgradeCategoryItemsContext", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.UpgradeCategoryItemsContext")
    @ResponseWrapper(localName = "UpgradeCategoryItemsContextResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.UpgradeCategoryItemsContextResponse")
    @WebResult(name = "UpgradeCategoryItemsContextResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.core.ChunkedOperationContext upgradeCategoryItemsContext(
        @WebParam(name = "categoryID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long categoryID,
        @WebParam(name = "version", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long version,
        @WebParam(name = "addVersion", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        boolean addVersion
    );

    @WebMethod(operationName = "RemoveNodeRight", action = "urn:DocMan.service.livelink.opentext.com/RemoveNodeRight")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/RemoveNodeRight", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/RemoveNodeRightResponse")
    @RequestWrapper(localName = "RemoveNodeRight", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.RemoveNodeRight")
    @ResponseWrapper(localName = "RemoveNodeRightResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.RemoveNodeRightResponse")
    public void removeNodeRight(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "nodeRight", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.NodeRight nodeRight
    );

    @WebMethod(operationName = "GetNodeAuditRecords", action = "urn:DocMan.service.livelink.opentext.com/GetNodeAuditRecords")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetNodeAuditRecords", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetNodeAuditRecordsResponse")
    @RequestWrapper(localName = "GetNodeAuditRecords", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodeAuditRecords")
    @ResponseWrapper(localName = "GetNodeAuditRecordsResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodeAuditRecordsResponse")
    @WebResult(name = "GetNodeAuditRecordsResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.util.List<com.opentext.livelink.service.docman.NodeAuditRecord> getNodeAuditRecords(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id
    );

    @WebMethod(operationName = "ListReferences", action = "urn:DocMan.service.livelink.opentext.com/ListReferences")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/ListReferences", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/ListReferencesResponse")
    @RequestWrapper(localName = "ListReferences", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.ListReferences")
    @ResponseWrapper(localName = "ListReferencesResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.ListReferencesResponse")
    @WebResult(name = "ListReferencesResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.util.List<com.opentext.livelink.service.docman.Node> listReferences(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id
    );

    @WebMethod(operationName = "GetNodeRights", action = "urn:DocMan.service.livelink.opentext.com/GetNodeRights")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetNodeRights", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetNodeRightsResponse")
    @RequestWrapper(localName = "GetNodeRights", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodeRights")
    @ResponseWrapper(localName = "GetNodeRightsResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodeRightsResponse")
    @WebResult(name = "GetNodeRightsResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.NodeRights getNodeRights(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id
    );

    @WebMethod(operationName = "GetNodeByGUID", action = "urn:DocMan.service.livelink.opentext.com/GetNodeByGUID")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetNodeByGUID", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetNodeByGUIDResponse")
    @RequestWrapper(localName = "GetNodeByGUID", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodeByGUID")
    @ResponseWrapper(localName = "GetNodeByGUIDResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodeByGUIDResponse")
    @WebResult(name = "GetNodeByGUIDResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.Node getNodeByGUID(
        @WebParam(name = "guid", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String guid
    );

    @WebMethod(operationName = "GetCategoryDefinition", action = "urn:DocMan.service.livelink.opentext.com/GetCategoryDefinition")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetCategoryDefinition", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetCategoryDefinitionResponse")
    @RequestWrapper(localName = "GetCategoryDefinition", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetCategoryDefinition")
    @ResponseWrapper(localName = "GetCategoryDefinitionResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetCategoryDefinitionResponse")
    @WebResult(name = "GetCategoryDefinitionResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.AttributeGroupDefinition getCategoryDefinition(
        @WebParam(name = "categoryID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long categoryID
    );

    @WebMethod(operationName = "RunReport", action = "urn:DocMan.service.livelink.opentext.com/RunReport")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/RunReport", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/RunReportResponse")
    @RequestWrapper(localName = "RunReport", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.RunReport")
    @ResponseWrapper(localName = "RunReportResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.RunReportResponse")
    @WebResult(name = "RunReportResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.ReportResult runReport(
        @WebParam(name = "reportID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long reportID,
        @WebParam(name = "inputs", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.util.List<com.opentext.livelink.service.core.DataValue> inputs
    );

    @WebMethod(operationName = "MoveNode", action = "urn:DocMan.service.livelink.opentext.com/MoveNode")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/MoveNode", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/MoveNodeResponse")
    @RequestWrapper(localName = "MoveNode", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.MoveNode")
    @ResponseWrapper(localName = "MoveNodeResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.MoveNodeResponse")
    public void moveNode(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "parentID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long parentID,
        @WebParam(name = "newName", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String newName,
        @WebParam(name = "moveOptions", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.MoveOptions moveOptions
    );

    @WebMethod(operationName = "CreateRenditionContext", action = "urn:DocMan.service.livelink.opentext.com/CreateRenditionContext")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/CreateRenditionContext", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/CreateRenditionContextResponse")
    @RequestWrapper(localName = "CreateRenditionContext", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateRenditionContext")
    @ResponseWrapper(localName = "CreateRenditionContextResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateRenditionContextResponse")
    @WebResult(name = "CreateRenditionContextResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.lang.String createRenditionContext(
        @WebParam(name = "nodeID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long nodeID,
        @WebParam(name = "versionNum", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long versionNum,
        @WebParam(name = "renditionType", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String renditionType
    );

    @WebMethod(operationName = "CreateSimpleDocumentContext", action = "urn:DocMan.service.livelink.opentext.com/CreateSimpleDocumentContext")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/CreateSimpleDocumentContext", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/CreateSimpleDocumentContextResponse")
    @RequestWrapper(localName = "CreateSimpleDocumentContext", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateSimpleDocumentContext")
    @ResponseWrapper(localName = "CreateSimpleDocumentContextResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateSimpleDocumentContextResponse")
    @WebResult(name = "CreateSimpleDocumentContextResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.lang.String createSimpleDocumentContext(
        @WebParam(name = "parentID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long parentID,
        @WebParam(name = "name", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String name
    );

    @WebMethod(operationName = "GetMultilingualMetadata", action = "urn:DocMan.service.livelink.opentext.com/GetMultilingualMetadata")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetMultilingualMetadata", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetMultilingualMetadataResponse")
    @RequestWrapper(localName = "GetMultilingualMetadata", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetMultilingualMetadata")
    @ResponseWrapper(localName = "GetMultilingualMetadataResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetMultilingualMetadataResponse")
    @WebResult(name = "GetMultilingualMetadataResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.util.List<com.opentext.livelink.service.docman.MultilingualMetadata> getMultilingualMetadata(
        @WebParam(name = "nodeID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long nodeID,
        @WebParam(name = "languageCodes", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.util.List<java.lang.String> languageCodes
    );

    @WebMethod(operationName = "SetNodeMetadata", action = "urn:DocMan.service.livelink.opentext.com/SetNodeMetadata")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/SetNodeMetadata", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/SetNodeMetadataResponse")
    @RequestWrapper(localName = "SetNodeMetadata", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.SetNodeMetadata")
    @ResponseWrapper(localName = "SetNodeMetadataResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.SetNodeMetadataResponse")
    public void setNodeMetadata(
        @WebParam(name = "nodeID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long nodeID,
        @WebParam(name = "metadata", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.Metadata metadata
    );

    @WebMethod(operationName = "LockRelease", action = "urn:DocMan.service.livelink.opentext.com/LockRelease")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/LockRelease", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/LockReleaseResponse")
    @RequestWrapper(localName = "LockRelease", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.LockRelease")
    @ResponseWrapper(localName = "LockReleaseResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.LockReleaseResponse")
    public void lockRelease(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "major", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long major,
        @WebParam(name = "minor", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long minor
    );

    @WebMethod(operationName = "SetNodeRights", action = "urn:DocMan.service.livelink.opentext.com/SetNodeRights")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/SetNodeRights", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/SetNodeRightsResponse")
    @RequestWrapper(localName = "SetNodeRights", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.SetNodeRights")
    @ResponseWrapper(localName = "SetNodeRightsResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.SetNodeRightsResponse")
    public void setNodeRights(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "rights", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.NodeRights rights
    );

    @WebMethod(operationName = "GetNodeTemplate", action = "urn:DocMan.service.livelink.opentext.com/GetNodeTemplate")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetNodeTemplate", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetNodeTemplateResponse")
    @RequestWrapper(localName = "GetNodeTemplate", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodeTemplate")
    @ResponseWrapper(localName = "GetNodeTemplateResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodeTemplateResponse")
    @WebResult(name = "GetNodeTemplateResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.Node getNodeTemplate(
        @WebParam(name = "parentID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long parentID,
        @WebParam(name = "nodeType", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String nodeType
    );

    @WebMethod(operationName = "RenameNode", action = "urn:DocMan.service.livelink.opentext.com/RenameNode")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/RenameNode", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/RenameNodeResponse")
    @RequestWrapper(localName = "RenameNode", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.RenameNode")
    @ResponseWrapper(localName = "RenameNodeResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.RenameNodeResponse")
    public void renameNode(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "newName", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String newName
    );

    @WebMethod(operationName = "UnlockVersion", action = "urn:DocMan.service.livelink.opentext.com/UnlockVersion")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/UnlockVersion", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/UnlockVersionResponse")
    @RequestWrapper(localName = "UnlockVersion", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.UnlockVersion")
    @ResponseWrapper(localName = "UnlockVersionResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.UnlockVersionResponse")
    public void unlockVersion(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "versionNum", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long versionNum
    );

    @WebMethod(operationName = "RemoveFavorite", action = "urn:DocMan.service.livelink.opentext.com/RemoveFavorite")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/RemoveFavorite", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/RemoveFavoriteResponse")
    @RequestWrapper(localName = "RemoveFavorite", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.RemoveFavorite")
    @ResponseWrapper(localName = "RemoveFavoriteResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.RemoveFavoriteResponse")
    public void removeFavorite(
        @WebParam(name = "nodeID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long nodeID
    );

    @WebMethod(operationName = "UpdateMultilingualMetadata", action = "urn:DocMan.service.livelink.opentext.com/UpdateMultilingualMetadata")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/UpdateMultilingualMetadata", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/UpdateMultilingualMetadataResponse")
    @RequestWrapper(localName = "UpdateMultilingualMetadata", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.UpdateMultilingualMetadata")
    @ResponseWrapper(localName = "UpdateMultilingualMetadataResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.UpdateMultilingualMetadataResponse")
    public void updateMultilingualMetadata(
        @WebParam(name = "nodeID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long nodeID,
        @WebParam(name = "metadata", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.util.List<com.opentext.livelink.service.docman.MultilingualMetadata> metadata
    );

    @WebMethod(operationName = "ListReleases", action = "urn:DocMan.service.livelink.opentext.com/ListReleases")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/ListReleases", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/ListReleasesResponse")
    @RequestWrapper(localName = "ListReleases", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.ListReleases")
    @ResponseWrapper(localName = "ListReleasesResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.ListReleasesResponse")
    @WebResult(name = "ListReleasesResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.util.List<com.opentext.livelink.service.docman.CompoundDocRelease> listReleases(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id
    );

    @WebMethod(operationName = "GetMetadataLanguages", action = "urn:DocMan.service.livelink.opentext.com/GetMetadataLanguages")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetMetadataLanguages", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetMetadataLanguagesResponse")
    @RequestWrapper(localName = "GetMetadataLanguages", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetMetadataLanguages")
    @ResponseWrapper(localName = "GetMetadataLanguagesResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetMetadataLanguagesResponse")
    @WebResult(name = "GetMetadataLanguagesResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.util.List<com.opentext.livelink.service.docman.MetadataLanguage> getMetadataLanguages();

    @WebMethod(operationName = "AddNodeRight", action = "urn:DocMan.service.livelink.opentext.com/AddNodeRight")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/AddNodeRight", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/AddNodeRightResponse")
    @RequestWrapper(localName = "AddNodeRight", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.AddNodeRight")
    @ResponseWrapper(localName = "AddNodeRightResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.AddNodeRightResponse")
    public void addNodeRight(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "nodeRight", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.NodeRight nodeRight
    );

    @WebMethod(operationName = "UpdateNode", action = "urn:DocMan.service.livelink.opentext.com/UpdateNode")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/UpdateNode", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/UpdateNodeResponse")
    @RequestWrapper(localName = "UpdateNode", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.UpdateNode")
    @ResponseWrapper(localName = "UpdateNodeResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.UpdateNodeResponse")
    public void updateNode(
        @WebParam(name = "node", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.Node node
    );

    @WebMethod(operationName = "UpdateCategory", action = "urn:DocMan.service.livelink.opentext.com/UpdateCategory")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/UpdateCategory", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/UpdateCategoryResponse")
    @RequestWrapper(localName = "UpdateCategory", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.UpdateCategory")
    @ResponseWrapper(localName = "UpdateCategoryResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.UpdateCategoryResponse")
    @WebResult(name = "UpdateCategoryResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.AttributeGroupDefinition updateCategory(
        @WebParam(name = "categoryID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long categoryID,
        @WebParam(name = "attributes", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.util.List<com.opentext.livelink.service.docman.Attribute> attributes
    );

    @WebMethod(operationName = "RemoveFromCollection", action = "urn:DocMan.service.livelink.opentext.com/RemoveFromCollection")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/RemoveFromCollection", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/RemoveFromCollectionResponse")
    @RequestWrapper(localName = "RemoveFromCollection", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.RemoveFromCollection")
    @ResponseWrapper(localName = "RemoveFromCollectionResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.RemoveFromCollectionResponse")
    public void removeFromCollection(
        @WebParam(name = "collectionID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long collectionID,
        @WebParam(name = "collectionItems", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.util.List<com.opentext.livelink.service.docman.CollectionItem> collectionItems
    );

    @WebMethod(operationName = "GetNodes", action = "urn:DocMan.service.livelink.opentext.com/GetNodes")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetNodes", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetNodesResponse")
    @RequestWrapper(localName = "GetNodes", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodes")
    @ResponseWrapper(localName = "GetNodesResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodesResponse")
    @WebResult(name = "GetNodesResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.util.List<com.opentext.livelink.service.docman.Node> getNodes(
        @WebParam(name = "IDs", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.util.List<java.lang.Long> iDs
    );

    @WebMethod(operationName = "ListRenditions", action = "urn:DocMan.service.livelink.opentext.com/ListRenditions")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/ListRenditions", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/ListRenditionsResponse")
    @RequestWrapper(localName = "ListRenditions", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.ListRenditions")
    @ResponseWrapper(localName = "ListRenditionsResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.ListRenditionsResponse")
    @WebResult(name = "ListRenditionsResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.util.List<com.opentext.livelink.service.docman.Version> listRenditions(
        @WebParam(name = "nodeID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long nodeID,
        @WebParam(name = "versionNum", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long versionNum
    );

    @WebMethod(operationName = "AddMajorVersion", action = "urn:DocMan.service.livelink.opentext.com/AddMajorVersion")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/AddMajorVersion", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/AddMajorVersionResponse")
    @RequestWrapper(localName = "AddMajorVersion", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.AddMajorVersion")
    @ResponseWrapper(localName = "AddMajorVersionResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.AddMajorVersionResponse")
    @WebResult(name = "AddMajorVersionResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.Version addMajorVersion(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "metadata", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.Metadata metadata,
        @WebParam(name = "attach", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.core.Attachment attach
    );

    @WebMethod(operationName = "CreateRendition", action = "urn:DocMan.service.livelink.opentext.com/CreateRendition")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/CreateRendition", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/CreateRenditionResponse")
    @RequestWrapper(localName = "CreateRendition", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateRendition")
    @ResponseWrapper(localName = "CreateRenditionResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateRenditionResponse")
    @WebResult(name = "CreateRenditionResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.Version createRendition(
        @WebParam(name = "nodeID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long nodeID,
        @WebParam(name = "versionNum", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long versionNum,
        @WebParam(name = "renditionType", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String renditionType,
        @WebParam(name = "attach", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.core.Attachment attach
    );

    @WebMethod(operationName = "UpdateNodeRight", action = "urn:DocMan.service.livelink.opentext.com/UpdateNodeRight")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/UpdateNodeRight", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/UpdateNodeRightResponse")
    @RequestWrapper(localName = "UpdateNodeRight", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.UpdateNodeRight")
    @ResponseWrapper(localName = "UpdateNodeRightResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.UpdateNodeRightResponse")
    public void updateNodeRight(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "nodeRight", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.NodeRight nodeRight
    );

    @WebMethod(operationName = "GetNodeByName", action = "urn:DocMan.service.livelink.opentext.com/GetNodeByName")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetNodeByName", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetNodeByNameResponse")
    @RequestWrapper(localName = "GetNodeByName", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodeByName")
    @ResponseWrapper(localName = "GetNodeByNameResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodeByNameResponse")
    @WebResult(name = "GetNodeByNameResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.Node getNodeByName(
        @WebParam(name = "parentID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long parentID,
        @WebParam(name = "name", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String name
    );

    @WebMethod(operationName = "GetAttributeGroupTemplate", action = "urn:DocMan.service.livelink.opentext.com/GetAttributeGroupTemplate")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetAttributeGroupTemplate", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetAttributeGroupTemplateResponse")
    @RequestWrapper(localName = "GetAttributeGroupTemplate", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetAttributeGroupTemplate")
    @ResponseWrapper(localName = "GetAttributeGroupTemplateResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetAttributeGroupTemplateResponse")
    @WebResult(name = "GetAttributeGroupTemplateResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.AttributeGroup getAttributeGroupTemplate(
        @WebParam(name = "type", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String type,
        @WebParam(name = "key", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String key
    );

    @WebMethod(operationName = "GetRootNodeTypes", action = "urn:DocMan.service.livelink.opentext.com/GetRootNodeTypes")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetRootNodeTypes", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetRootNodeTypesResponse")
    @RequestWrapper(localName = "GetRootNodeTypes", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetRootNodeTypes")
    @ResponseWrapper(localName = "GetRootNodeTypesResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetRootNodeTypesResponse")
    @WebResult(name = "GetRootNodeTypesResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.util.List<java.lang.String> getRootNodeTypes();

    @WebMethod(operationName = "CreateURL", action = "urn:DocMan.service.livelink.opentext.com/CreateURL")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/CreateURL", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/CreateURLResponse")
    @RequestWrapper(localName = "CreateURL", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateURL")
    @ResponseWrapper(localName = "CreateURLResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateURLResponse")
    @WebResult(name = "CreateURLResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.Node createURL(
        @WebParam(name = "parentID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long parentID,
        @WebParam(name = "name", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String name,
        @WebParam(name = "comment", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String comment,
        @WebParam(name = "location", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String location,
        @WebParam(name = "metadata", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.Metadata metadata
    );

    @WebMethod(operationName = "GetNodeByNickname", action = "urn:DocMan.service.livelink.opentext.com/GetNodeByNickname")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetNodeByNickname", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetNodeByNicknameResponse")
    @RequestWrapper(localName = "GetNodeByNickname", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodeByNickname")
    @ResponseWrapper(localName = "GetNodeByNicknameResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodeByNicknameResponse")
    @WebResult(name = "GetNodeByNicknameResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.Node getNodeByNickname(
        @WebParam(name = "nickname", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String nickname
    );

    @WebMethod(operationName = "DeleteVersion", action = "urn:DocMan.service.livelink.opentext.com/DeleteVersion")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/DeleteVersion", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/DeleteVersionResponse")
    @RequestWrapper(localName = "DeleteVersion", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.DeleteVersion")
    @ResponseWrapper(localName = "DeleteVersionResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.DeleteVersionResponse")
    public void deleteVersion(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "versionNum", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long versionNum
    );

    @WebMethod(operationName = "GetRelease", action = "urn:DocMan.service.livelink.opentext.com/GetRelease")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetRelease", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetReleaseResponse")
    @RequestWrapper(localName = "GetRelease", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetRelease")
    @ResponseWrapper(localName = "GetReleaseResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetReleaseResponse")
    @WebResult(name = "GetReleaseResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.CompoundDocRelease getRelease(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "major", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long major,
        @WebParam(name = "minor", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long minor
    );

    @WebMethod(operationName = "GetVersion", action = "urn:DocMan.service.livelink.opentext.com/GetVersion")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetVersion", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetVersionResponse")
    @RequestWrapper(localName = "GetVersion", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetVersion")
    @ResponseWrapper(localName = "GetVersionResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetVersionResponse")
    @WebResult(name = "GetVersionResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.Version getVersion(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "versionNum", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long versionNum
    );

    @WebMethod(operationName = "UnreserveNode", action = "urn:DocMan.service.livelink.opentext.com/UnreserveNode")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/UnreserveNode", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/UnreserveNodeResponse")
    @RequestWrapper(localName = "UnreserveNode", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.UnreserveNode")
    @ResponseWrapper(localName = "UnreserveNodeResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.UnreserveNodeResponse")
    public void unreserveNode(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id
    );

    @WebMethod(operationName = "DeleteRelease", action = "urn:DocMan.service.livelink.opentext.com/DeleteRelease")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/DeleteRelease", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/DeleteReleaseResponse")
    @RequestWrapper(localName = "DeleteRelease", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.DeleteRelease")
    @ResponseWrapper(localName = "DeleteReleaseResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.DeleteReleaseResponse")
    public void deleteRelease(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "major", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long major,
        @WebParam(name = "minor", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long minor
    );

    @WebMethod(operationName = "CreateNode", action = "urn:DocMan.service.livelink.opentext.com/CreateNode")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/CreateNode", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/CreateNodeResponse")
    @RequestWrapper(localName = "CreateNode", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateNode")
    @ResponseWrapper(localName = "CreateNodeResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateNodeResponse")
    @WebResult(name = "CreateNodeResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.Node createNode(
        @WebParam(name = "node", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.Node node
    );

    @WebMethod(operationName = "CreateShortcut", action = "urn:DocMan.service.livelink.opentext.com/CreateShortcut")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/CreateShortcut", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/CreateShortcutResponse")
    @RequestWrapper(localName = "CreateShortcut", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateShortcut")
    @ResponseWrapper(localName = "CreateShortcutResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateShortcutResponse")
    @WebResult(name = "CreateShortcutResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.Node createShortcut(
        @WebParam(name = "parentID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long parentID,
        @WebParam(name = "name", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String name,
        @WebParam(name = "comment", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String comment,
        @WebParam(name = "sourceID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long sourceID,
        @WebParam(name = "metadata", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.Metadata metadata
    );

    @WebMethod(operationName = "ReserveNode", action = "urn:DocMan.service.livelink.opentext.com/ReserveNode")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/ReserveNode", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/ReserveNodeResponse")
    @RequestWrapper(localName = "ReserveNode", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.ReserveNode")
    @ResponseWrapper(localName = "ReserveNodeResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.ReserveNodeResponse")
    public void reserveNode(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "userID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.Long userID
    );

    @WebMethod(operationName = "GetAllFavorites", action = "urn:DocMan.service.livelink.opentext.com/GetAllFavorites")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetAllFavorites", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetAllFavoritesResponse")
    @RequestWrapper(localName = "GetAllFavorites", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetAllFavorites")
    @ResponseWrapper(localName = "GetAllFavoritesResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetAllFavoritesResponse")
    @WebResult(name = "GetAllFavoritesResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.util.List<com.opentext.livelink.service.docman.Node> getAllFavorites();

    @WebMethod(operationName = "RepositionNode", action = "urn:DocMan.service.livelink.opentext.com/RepositionNode")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/RepositionNode", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/RepositionNodeResponse")
    @RequestWrapper(localName = "RepositionNode", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.RepositionNode")
    @ResponseWrapper(localName = "RepositionNodeResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.RepositionNodeResponse")
    public void repositionNode(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "position", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long position
    );

    @WebMethod(operationName = "GetVersionContentsContext", action = "urn:DocMan.service.livelink.opentext.com/GetVersionContentsContext")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetVersionContentsContext", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetVersionContentsContextResponse")
    @RequestWrapper(localName = "GetVersionContentsContext", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetVersionContentsContext")
    @ResponseWrapper(localName = "GetVersionContentsContextResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetVersionContentsContextResponse")
    @WebResult(name = "GetVersionContentsContextResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.lang.String getVersionContentsContext(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "versionNum", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long versionNum
    );

    @WebMethod(operationName = "CreateNodeAndVersion", action = "urn:DocMan.service.livelink.opentext.com/CreateNodeAndVersion")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/CreateNodeAndVersion", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/CreateNodeAndVersionResponse")
    @RequestWrapper(localName = "CreateNodeAndVersion", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateNodeAndVersion")
    @ResponseWrapper(localName = "CreateNodeAndVersionResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateNodeAndVersionResponse")
    @WebResult(name = "CreateNodeAndVersionResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.Node createNodeAndVersion(
        @WebParam(name = "node", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.Node node,
        @WebParam(name = "attach", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.core.Attachment attach
    );

    @WebMethod(operationName = "GetVersionByGUID", action = "urn:DocMan.service.livelink.opentext.com/GetVersionByGUID")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetVersionByGUID", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetVersionByGUIDResponse")
    @RequestWrapper(localName = "GetVersionByGUID", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetVersionByGUID")
    @ResponseWrapper(localName = "GetVersionByGUIDResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetVersionByGUIDResponse")
    @WebResult(name = "GetVersionByGUIDResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.Version getVersionByGUID(
        @WebParam(name = "guid", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String guid
    );

    @WebMethod(operationName = "UpdateNodeRightsContext", action = "urn:DocMan.service.livelink.opentext.com/UpdateNodeRightsContext")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/UpdateNodeRightsContext", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/UpdateNodeRightsContextResponse")
    @RequestWrapper(localName = "UpdateNodeRightsContext", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.UpdateNodeRightsContext")
    @ResponseWrapper(localName = "UpdateNodeRightsContextResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.UpdateNodeRightsContextResponse")
    @WebResult(name = "UpdateNodeRightsContextResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.core.ChunkedOperationContext updateNodeRightsContext(
        @WebParam(name = "nodeID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long nodeID,
        @WebParam(name = "operation", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.RightOperation operation,
        @WebParam(name = "rights", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.util.List<com.opentext.livelink.service.docman.NodeRight> rights,
        @WebParam(name = "propagation", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.RightPropagation propagation
    );

    @WebMethod(operationName = "GetNodeByPath", action = "urn:DocMan.service.livelink.opentext.com/GetNodeByPath")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetNodeByPath", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetNodeByPathResponse")
    @RequestWrapper(localName = "GetNodeByPath", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodeByPath")
    @ResponseWrapper(localName = "GetNodeByPathResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodeByPathResponse")
    @WebResult(name = "GetNodeByPathResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.Node getNodeByPath(
        @WebParam(name = "rootID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long rootID,
        @WebParam(name = "pathElements", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.util.List<java.lang.String> pathElements
    );

    @WebMethod(operationName = "AddVersionContext", action = "urn:DocMan.service.livelink.opentext.com/AddVersionContext")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/AddVersionContext", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/AddVersionContextResponse")
    @RequestWrapper(localName = "AddVersionContext", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.AddVersionContext")
    @ResponseWrapper(localName = "AddVersionContextResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.AddVersionContextResponse")
    @WebResult(name = "AddVersionContextResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.lang.String addVersionContext(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "metadata", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.Metadata metadata
    );

    @WebMethod(operationName = "UpdateVersion", action = "urn:DocMan.service.livelink.opentext.com/UpdateVersion")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/UpdateVersion", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/UpdateVersionResponse")
    @RequestWrapper(localName = "UpdateVersion", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.UpdateVersion")
    @ResponseWrapper(localName = "UpdateVersionResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.UpdateVersionResponse")
    public void updateVersion(
        @WebParam(name = "version", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.Version version
    );

    @WebMethod(operationName = "AddFavorite", action = "urn:DocMan.service.livelink.opentext.com/AddFavorite")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/AddFavorite", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/AddFavoriteResponse")
    @RequestWrapper(localName = "AddFavorite", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.AddFavorite")
    @ResponseWrapper(localName = "AddFavoriteResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.AddFavoriteResponse")
    public void addFavorite(
        @WebParam(name = "nodeID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long nodeID
    );

    @WebMethod(operationName = "AddMajorVersionContext", action = "urn:DocMan.service.livelink.opentext.com/AddMajorVersionContext")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/AddMajorVersionContext", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/AddMajorVersionContextResponse")
    @RequestWrapper(localName = "AddMajorVersionContext", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.AddMajorVersionContext")
    @ResponseWrapper(localName = "AddMajorVersionContextResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.AddMajorVersionContextResponse")
    @WebResult(name = "AddMajorVersionContextResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.lang.String addMajorVersionContext(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "metadata", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.Metadata metadata
    );

    @WebMethod(operationName = "GetAttributeGroupDefinition", action = "urn:DocMan.service.livelink.opentext.com/GetAttributeGroupDefinition")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetAttributeGroupDefinition", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetAttributeGroupDefinitionResponse")
    @RequestWrapper(localName = "GetAttributeGroupDefinition", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetAttributeGroupDefinition")
    @ResponseWrapper(localName = "GetAttributeGroupDefinitionResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetAttributeGroupDefinitionResponse")
    @WebResult(name = "GetAttributeGroupDefinitionResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.AttributeGroupDefinition getAttributeGroupDefinition(
        @WebParam(name = "type", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String type,
        @WebParam(name = "key", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String key
    );

    @WebMethod(operationName = "PurgeVersions", action = "urn:DocMan.service.livelink.opentext.com/PurgeVersions")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/PurgeVersions", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/PurgeVersionsResponse")
    @RequestWrapper(localName = "PurgeVersions", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.PurgeVersions")
    @ResponseWrapper(localName = "PurgeVersionsResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.PurgeVersionsResponse")
    public void purgeVersions(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "numberToKeep", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        int numberToKeep
    );

    @WebMethod(operationName = "GetNodeGUID", action = "urn:DocMan.service.livelink.opentext.com/GetNodeGUID")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetNodeGUID", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetNodeGUIDResponse")
    @RequestWrapper(localName = "GetNodeGUID", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodeGUID")
    @ResponseWrapper(localName = "GetNodeGUIDResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodeGUIDResponse")
    @WebResult(name = "GetNodeGUIDResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.lang.String getNodeGUID(
        @WebParam(name = "nodeID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long nodeID
    );

    @WebMethod(operationName = "CreateRelease", action = "urn:DocMan.service.livelink.opentext.com/CreateRelease")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/CreateRelease", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/CreateReleaseResponse")
    @RequestWrapper(localName = "CreateRelease", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateRelease")
    @ResponseWrapper(localName = "CreateReleaseResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateReleaseResponse")
    @WebResult(name = "CreateReleaseResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.CompoundDocRelease createRelease(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "major", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        boolean major,
        @WebParam(name = "releaseName", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String releaseName
    );

    @WebMethod(operationName = "GetAllMultilingualMetadata", action = "urn:DocMan.service.livelink.opentext.com/GetAllMultilingualMetadata")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetAllMultilingualMetadata", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetAllMultilingualMetadataResponse")
    @RequestWrapper(localName = "GetAllMultilingualMetadata", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetAllMultilingualMetadata")
    @ResponseWrapper(localName = "GetAllMultilingualMetadataResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetAllMultilingualMetadataResponse")
    @WebResult(name = "GetAllMultilingualMetadataResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.util.List<com.opentext.livelink.service.docman.MultilingualMetadata> getAllMultilingualMetadata(
        @WebParam(name = "nodeID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long nodeID
    );

    @WebMethod(operationName = "UpgradeCategoryItems", action = "urn:DocMan.service.livelink.opentext.com/UpgradeCategoryItems")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/UpgradeCategoryItems", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/UpgradeCategoryItemsResponse")
    @RequestWrapper(localName = "UpgradeCategoryItems", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.UpgradeCategoryItems")
    @ResponseWrapper(localName = "UpgradeCategoryItemsResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.UpgradeCategoryItemsResponse")
    @WebResult(name = "UpgradeCategoryItemsResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.CategoryItemsUpgradeInfo upgradeCategoryItems(
        @WebParam(name = "context", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.core.ChunkedOperationContext context
    );

    @WebMethod(operationName = "LockVersion", action = "urn:DocMan.service.livelink.opentext.com/LockVersion")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/LockVersion", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/LockVersionResponse")
    @RequestWrapper(localName = "LockVersion", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.LockVersion")
    @ResponseWrapper(localName = "LockVersionResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.LockVersionResponse")
    public void lockVersion(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "versionNum", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long versionNum
    );

    @WebMethod(operationName = "GetRenditionContents", action = "urn:DocMan.service.livelink.opentext.com/GetRenditionContents")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetRenditionContents", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetRenditionContentsResponse")
    @RequestWrapper(localName = "GetRenditionContents", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetRenditionContents")
    @ResponseWrapper(localName = "GetRenditionContentsResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetRenditionContentsResponse")
    @WebResult(name = "GetRenditionContentsResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.core.Attachment getRenditionContents(
        @WebParam(name = "nodeID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long nodeID,
        @WebParam(name = "versionNum", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long versionNum,
        @WebParam(name = "renditionType", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String renditionType
    );

    @WebMethod(operationName = "CreateSimpleDocument", action = "urn:DocMan.service.livelink.opentext.com/CreateSimpleDocument")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/CreateSimpleDocument", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/CreateSimpleDocumentResponse")
    @RequestWrapper(localName = "CreateSimpleDocument", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateSimpleDocument")
    @ResponseWrapper(localName = "CreateSimpleDocumentResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateSimpleDocumentResponse")
    @WebResult(name = "CreateSimpleDocumentResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public long createSimpleDocument(
        @WebParam(name = "parentID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long parentID,
        @WebParam(name = "name", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String name,
        @WebParam(name = "attach", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.core.Attachment attach
    );

    @WebMethod(operationName = "GetNodesInContainer", action = "urn:DocMan.service.livelink.opentext.com/GetNodesInContainer")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetNodesInContainer", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetNodesInContainerResponse")
    @RequestWrapper(localName = "GetNodesInContainer", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodesInContainer")
    @ResponseWrapper(localName = "GetNodesInContainerResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodesInContainerResponse")
    @WebResult(name = "GetNodesInContainerResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.util.List<com.opentext.livelink.service.docman.Node> getNodesInContainer(
        @WebParam(name = "containerID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long containerID,
        @WebParam(name = "options", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.GetNodesInContainerOptions options
    );

    @WebMethod(operationName = "CreateDocument", action = "urn:DocMan.service.livelink.opentext.com/CreateDocument")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/CreateDocument", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/CreateDocumentResponse")
    @RequestWrapper(localName = "CreateDocument", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateDocument")
    @ResponseWrapper(localName = "CreateDocumentResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateDocumentResponse")
    @WebResult(name = "CreateDocumentResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.Node createDocument(
        @WebParam(name = "parentID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long parentID,
        @WebParam(name = "name", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String name,
        @WebParam(name = "comment", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String comment,
        @WebParam(name = "advancedVersionControl", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        boolean advancedVersionControl,
        @WebParam(name = "metadata", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.Metadata metadata,
        @WebParam(name = "attach", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.core.Attachment attach
    );

    @WebMethod(operationName = "CreateFolder", action = "urn:DocMan.service.livelink.opentext.com/CreateFolder")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/CreateFolder", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/CreateFolderResponse")
    @RequestWrapper(localName = "CreateFolder", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateFolder")
    @ResponseWrapper(localName = "CreateFolderResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateFolderResponse")
    @WebResult(name = "CreateFolderResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.Node createFolder(
        @WebParam(name = "parentID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long parentID,
        @WebParam(name = "name", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String name,
        @WebParam(name = "comment", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String comment,
        @WebParam(name = "metadata", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.Metadata metadata
    );

    @WebMethod(operationName = "PromoteVersion", action = "urn:DocMan.service.livelink.opentext.com/PromoteVersion")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/PromoteVersion", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/PromoteVersionResponse")
    @RequestWrapper(localName = "PromoteVersion", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.PromoteVersion")
    @ResponseWrapper(localName = "PromoteVersionResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.PromoteVersionResponse")
    @WebResult(name = "PromoteVersionResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.Version promoteVersion(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "versionNum", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long versionNum,
        @WebParam(name = "metadata", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.Metadata metadata
    );

    @WebMethod(operationName = "GetVersionContents", action = "urn:DocMan.service.livelink.opentext.com/GetVersionContents")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetVersionContents", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetVersionContentsResponse")
    @RequestWrapper(localName = "GetVersionContents", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetVersionContents")
    @ResponseWrapper(localName = "GetVersionContentsResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetVersionContentsResponse")
    @WebResult(name = "GetVersionContentsResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.core.Attachment getVersionContents(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "versionNum", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long versionNum
    );

    @WebMethod(operationName = "UnlockRelease", action = "urn:DocMan.service.livelink.opentext.com/UnlockRelease")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/UnlockRelease", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/UnlockReleaseResponse")
    @RequestWrapper(localName = "UnlockRelease", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.UnlockRelease")
    @ResponseWrapper(localName = "UnlockReleaseResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.UnlockReleaseResponse")
    public void unlockRelease(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "major", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long major,
        @WebParam(name = "minor", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long minor
    );

    @WebMethod(operationName = "DeleteRendition", action = "urn:DocMan.service.livelink.opentext.com/DeleteRendition")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/DeleteRendition", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/DeleteRenditionResponse")
    @RequestWrapper(localName = "DeleteRendition", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.DeleteRendition")
    @ResponseWrapper(localName = "DeleteRenditionResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.DeleteRenditionResponse")
    public void deleteRendition(
        @WebParam(name = "nodeID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long nodeID,
        @WebParam(name = "versionNum", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long versionNum,
        @WebParam(name = "renditionType", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String renditionType
    );

    @WebMethod(operationName = "RearrangeNodes", action = "urn:DocMan.service.livelink.opentext.com/RearrangeNodes")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/RearrangeNodes", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/RearrangeNodesResponse")
    @RequestWrapper(localName = "RearrangeNodes", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.RearrangeNodes")
    @ResponseWrapper(localName = "RearrangeNodesResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.RearrangeNodesResponse")
    public void rearrangeNodes(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id,
        @WebParam(name = "positions", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.util.List<com.opentext.livelink.service.docman.NodePosition> positions
    );

    @WebMethod(operationName = "CreateDocumentContext", action = "urn:DocMan.service.livelink.opentext.com/CreateDocumentContext")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/CreateDocumentContext", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/CreateDocumentContextResponse")
    @RequestWrapper(localName = "CreateDocumentContext", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateDocumentContext")
    @ResponseWrapper(localName = "CreateDocumentContextResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateDocumentContextResponse")
    @WebResult(name = "CreateDocumentContextResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.lang.String createDocumentContext(
        @WebParam(name = "parentID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long parentID,
        @WebParam(name = "name", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String name,
        @WebParam(name = "comment", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String comment,
        @WebParam(name = "advancedVersionControl", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        boolean advancedVersionControl,
        @WebParam(name = "metadata", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.Metadata metadata
    );

    @WebMethod(operationName = "CreateCategory", action = "urn:DocMan.service.livelink.opentext.com/CreateCategory")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/CreateCategory", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/CreateCategoryResponse")
    @RequestWrapper(localName = "CreateCategory", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateCategory")
    @ResponseWrapper(localName = "CreateCategoryResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.CreateCategoryResponse")
    @WebResult(name = "CreateCategoryResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.Node createCategory(
        @WebParam(name = "parentID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long parentID,
        @WebParam(name = "name", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String name,
        @WebParam(name = "comment", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.lang.String comment,
        @WebParam(name = "attributes", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.util.List<com.opentext.livelink.service.docman.Attribute> attributes,
        @WebParam(name = "metadata", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.docman.Metadata metadata
    );

    @WebMethod(operationName = "GetCategoryDefinitions", action = "urn:DocMan.service.livelink.opentext.com/GetCategoryDefinitions")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetCategoryDefinitions", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetCategoryDefinitionsResponse")
    @RequestWrapper(localName = "GetCategoryDefinitions", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetCategoryDefinitions")
    @ResponseWrapper(localName = "GetCategoryDefinitionsResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetCategoryDefinitionsResponse")
    @WebResult(name = "GetCategoryDefinitionsResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.util.List<com.opentext.livelink.service.docman.AttributeGroupDefinition> getCategoryDefinitions(
        @WebParam(name = "categoryIDs", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        java.util.List<java.lang.Long> categoryIDs
    );

    @WebMethod(operationName = "GetVersionGUID", action = "urn:DocMan.service.livelink.opentext.com/GetVersionGUID")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetVersionGUID", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetVersionGUIDResponse")
    @RequestWrapper(localName = "GetVersionGUID", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetVersionGUID")
    @ResponseWrapper(localName = "GetVersionGUIDResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetVersionGUIDResponse")
    @WebResult(name = "GetVersionGUIDResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.lang.String getVersionGUID(
        @WebParam(name = "nodeID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long nodeID,
        @WebParam(name = "versionNumber", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long versionNumber
    );

    @WebMethod(operationName = "GetNodeTypes", action = "urn:DocMan.service.livelink.opentext.com/GetNodeTypes")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetNodeTypes", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetNodeTypesResponse")
    @RequestWrapper(localName = "GetNodeTypes", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodeTypes")
    @ResponseWrapper(localName = "GetNodeTypesResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodeTypesResponse")
    @WebResult(name = "GetNodeTypesResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public java.util.List<java.lang.String> getNodeTypes();

    @WebMethod(operationName = "GetNode", action = "urn:DocMan.service.livelink.opentext.com/GetNode")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetNode", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetNodeResponse")
    @RequestWrapper(localName = "GetNode", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNode")
    @ResponseWrapper(localName = "GetNodeResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetNodeResponse")
    @WebResult(name = "GetNodeResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.Node getNode(
        @WebParam(name = "ID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long id
    );

    @WebMethod(operationName = "GetCategoryTemplate", action = "urn:DocMan.service.livelink.opentext.com/GetCategoryTemplate")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/GetCategoryTemplate", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/GetCategoryTemplateResponse")
    @RequestWrapper(localName = "GetCategoryTemplate", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetCategoryTemplate")
    @ResponseWrapper(localName = "GetCategoryTemplateResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.GetCategoryTemplateResponse")
    @WebResult(name = "GetCategoryTemplateResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.AttributeGroup getCategoryTemplate(
        @WebParam(name = "categoryID", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        long categoryID
    );

    @WebMethod(operationName = "UpdateNodeRights", action = "urn:DocMan.service.livelink.opentext.com/UpdateNodeRights")
    @Action(input = "urn:DocMan.service.livelink.opentext.com/UpdateNodeRights", output = "urn:DocMan.service.livelink.opentext.com/DocumentManagement/UpdateNodeRightsResponse")
    @RequestWrapper(localName = "UpdateNodeRights", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.UpdateNodeRights")
    @ResponseWrapper(localName = "UpdateNodeRightsResponse", targetNamespace = "urn:DocMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.docman.UpdateNodeRightsResponse")
    @WebResult(name = "UpdateNodeRightsResult", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
    public com.opentext.livelink.service.docman.NodeRightUpdateInfo updateNodeRights(
        @WebParam(name = "context", targetNamespace = "urn:DocMan.service.livelink.opentext.com")
        com.opentext.livelink.service.core.ChunkedOperationContext context
    );
}
